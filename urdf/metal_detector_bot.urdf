<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-1-g15f4949  Build Version: 1.6.7594.29634
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot name="metal_detector_bot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  
  <!--<material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="grey">
    <color rgba="0.75 0.75 0.75 1"/>
  </material>-->
  <gazebo reference="base_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="Back_left_wheel_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="Back_right_wheel_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="Front_left_wheel_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="Front_right_wheel_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="Lidar_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="camera_link">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="Metal_detector_plate_link">
    <material>Gazebo/Yellow</material>
  </gazebo>
  
  <link
    name="base_link">
    <inertial>
      <origin
        xyz="0.324697690746331 -0.519406767156155 0.192858657939441"
        rpy="0 0 0" />
      <mass
        value="3.68397420212594" />
      <inertia
        ixx="0.0209130525071478"
        ixy="6.08657151565062E-07"
        ixz="-0.00129761516660942"
        iyy="0.0391259397176633"
        iyz="1.5992950501523E-08"
        izz="0.0539534827114343" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0 0 0 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>
  <link
    name="Back_left_wheel_link">
    <inertial>
      <origin
        xyz="0 0 0.0262587770530892"
        rpy="0 0 0" />
      <mass
        value="0.49830589190105" />
      <inertia
        ixx="0.000864068748819036"
        ixy="-1.53511821201862E-21"
        ixz="-3.38949670235677E-20"
        iyy="0.000864068748819036"
        iyz="-1.0316315853768E-21"
        izz="0.00167126892614855" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/Back_left_wheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.298039215686275 0.298039215686275 0.298039215686275 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/Back_left_wheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Back_left_wheel_joint"
    type="continuous">
    <origin
      xyz="0.48383 -0.66997 0.14637"
      rpy="1.5708 0 0" />
    <parent
      link="base_link" />
    <child
      link="Back_left_wheel_link" />
    <axis
      xyz="0 0 1" />
    <limit
      lower="0"
      upper="0"
      effort="0"
      velocity="0" />
  </joint>
  <link
    name="Back_right_wheel_link">
    <inertial>
      <origin
        xyz="-1.38777878078145E-17 1.11022302462516E-16 -0.0128912229469108"
        rpy="0 0 0" />
      <mass
        value="0.498305891901051" />
      <inertia
        ixx="0.000864068748819039"
        ixy="2.71050543121376E-20"
        ixz="-9.34238749322121E-20"
        iyy="0.000864068748819038"
        iyz="6.50887516749926E-19"
        izz="0.00167126892614856" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="3.1416 0 0" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/Back_right_wheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.298039215686275 0.298039215686275 0.298039215686275 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/Back_right_wheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Back_right_wheel_joint"
    type="continuous">
    <origin
      xyz="0.48383 -0.32952 0.14637"
      rpy="1.5708 0 0" />
    <parent
      link="base_link" />
    <child
      link="Back_right_wheel_link" />
    <axis
      xyz="0 0 1" />
    <limit
      lower="0"
      upper="0"
      effort="0"
      velocity="0" />
  </joint>
  <link
    name="Front_left_wheel_link">
    <inertial>
      <origin
        xyz="-2.77555756156289E-17 -1.38777878078145E-17 0.0260109649102439"
        rpy="0 0 0" />
      <mass
        value="0.172260974459748" />
      <inertia
        ixx="0.000112055736650577"
        ixy="1.02659101699552E-21"
        ixz="5.48524870394726E-22"
        iyy="0.000112055736650577"
        iyz="2.96384707822115E-22"
        izz="0.000202988063086608" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/Front_left_wheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.298039215686275 0.298039215686275 0.298039215686275 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/Front_left_wheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Front_left_wheel_joint"
    type="continuous">
    <origin
      xyz="0.13457 -0.68787 0.11335"
      rpy="1.5708 0 0" />
    <parent
      link="base_link" />
    <child
      link="Front_left_wheel_link" />
    <axis
      xyz="0 0 1" />
    <limit
      lower="0"
      upper="0"
      effort="0"
      velocity="0" />
  </joint>
  <link
    name="Front_right_wheel_link">
    <inertial>
      <origin
        xyz="3.05311331771918E-16 -4.16333634234434E-16 -0.0131390350897561"
        rpy="0 0 0" />
      <mass
        value="0.172260974459748" />
      <inertia
        ixx="0.000112055736650577"
        ixy="1.35525271560688E-20"
        ixz="-2.75192086644509E-20"
        iyy="0.000112055736650577"
        iyz="3.91038572204568E-20"
        izz="0.000202988063086608" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="3.1416 0 0" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/Front_right_wheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.298039215686275 0.298039215686275 0.298039215686275 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/Front_right_wheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Front_right_wheel_joint"
    type="continuous">
    <origin
      xyz="0.13457 -0.31162 0.11335"
      rpy="1.5708 0 0" />
    <parent
      link="base_link" />
    <child
      link="Front_right_wheel_link" />
    <axis
      xyz="0 0 1" />
    <limit
      lower="0"
      upper="0"
      effort="0"
      velocity="0" />
  </joint>
  <link
    name="Lidar_link">
    <inertial>
      <origin
        xyz="-6.79587614786925E-05 0.0127572143525103 -0.00287746273821438"
        rpy="1.5707 0 0" />
      <mass
        value="0.0553297294575326" />
      <inertia
        ixx="1.77198970100708E-05"
        ixy="-5.03899483380146E-09"
        ixz="3.90650477574448E-08"
        iyy="3.29681799815038E-05"
        iyz="-2.52552357078286E-07"
        izz="1.80448127856945E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="1.5707 0 -1.5707" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/Lidar_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 0 0 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/Lidar_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Lidar_joint"
    type="revolute">
    <origin
      xyz="0.28528 -0.51932 0.297"
      rpy="0 0 0" />

     
    <parent
      link="base_link" />
    <child
      link="Lidar_link" />
    <axis
      xyz="0 1 0" />
    <limit
      lower="0"
      upper="0"
      effort="0"
      velocity="0" />
  </joint>


   <!--The LIDAR plugin has been inserted by MBK from the website-->
  <!--https://classic.gazebosim.org/tutorials?tut=ros_gzplugins-->
  <!--Adding LIDAR Sensor to the Robot-->
  <!-- hokuyo -->
  <gazebo reference="Lidar_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 3.142</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>Lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>




  <link
    name="Metal_detector_plate_link">
    <inertial>
      <origin
        xyz="-0.140649491426954 0.00399961617526758 -4.44089209850063E-16"
        rpy="0 0 0" />
      <mass
        value="0.150226233073953" />
      <inertia
        ixx="0.000116851232021106"
        ixy="-1.7623068319973E-19"
        ixz="-2.71558762889729E-18"
        iyy="0.00103678804074853"
        iyz="-9.96731230999088E-21"
        izz="0.000921539221880216" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/Metal_detector_plate_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 0 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://metal_detector_bot/meshes/Metal_detector_plate_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Metal_detector_plate_joint"
    type="revolute">
    <origin
      xyz="0.19318 -0.51932 0.10936"
      rpy="1.5701 -0.0068962 0.093846" />
    <parent
      link="base_link" />
    <child
      link="Metal_detector_plate_link" />
    <axis
      xyz="0 1 0" />
    <limit
      lower="0"
      upper="0"
      effort="0"
      velocity="0" />
  </joint>
  

  <!--<gazebo reference="base_link">
  <mu1 value="200.0"/>
  <mu2 value="100"/>
  <kp value="10000000.0"/>
  <kd value="1.0"/>
  <material>Gazebo/black</material>
  </gazebo>-->

 <!--Added by MBK-->
 <!-- Necessary for movement of the differential drive mobile robot -->
 <!-- https://www.theconstructsim.com/ros-qa-126-how-to-configure-the-differential-drive-ros-controller/ -->

 <transmission name="left_wheel_transmission">
  <type>transmission_interface/SimpleTransmission</type>
  <joint name="Back_left_wheel_joint">
    <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>  
  </joint>
  <actuator name="left_wheel_actuator">
    <mechanicalReduction>7</mechanicalReduction>
    <hardwareInterface>VelocityJointInterface</hardwareInterface>
  </actuator>
</transmission>

<transmission name="right_wheel_transmission">
  <type>transmission_interface/SimpleTransmission</type>
  <joint name="Back_right_wheel_joint">
    <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>  
  </joint>
  <actuator name="right_wheel_actuator">
    <mechanicalReduction>7</mechanicalReduction>
    <hardwareInterface>VelocityJointInterface</hardwareInterface>
  </actuator>
</transmission>


 


  <!--The camera plugin has been inserted by MBK from the website-->
  <!--https://classic.gazebosim.org/tutorials?tut=ros_gzplugins-->
  <!--Adding Camera Sensor to the Robot-->
  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.28528 -0.61932 0.297" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>


 
  <!-- Inserting Camera Link in the URDF File-->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <!-- Camera plugin, so that the camera behaves like a real camera and all the data
  is available as rostopics -->

  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!--Differential drive plugin inserted by MBK-->
  <!-- This is necessary to move the robot using cmd_vel -->
  <!-- The plugin is taken from the website -->
  <!-- https://kiranpalla.com/autonomous-navigation-ros-differential-drive-robot-simulation/simple-navigation-with-differential-drive-plugin/ -->

  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <alwaysOn>true</alwaysOn>
      <legacyMode>false</legacyMode>
      <updateRate>40</updateRate>
      <leftJoint>Back_left_wheel_joint</leftJoint>
      <rightJoint>Back_right_wheel_joint</rightJoint>
      <wheelSeparation>0.2794</wheelSeparation>
      <wheelDiameter>0.1524</wheelDiameter>
      <torque>20</torque>
      <wheelTorque>5</wheelTorque>
      <wheelAcceleration>0</wheelAcceleration>
      <commandTopic>/cmd_vel</commandTopic>
      <odometryTopic>/odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishWheelTF>true</publishWheelTF>
      <publishOdomTF>true</publishOdomTF>
      <publishWheelJointState>true</publishWheelJointState>
    </plugin>

  <plugin name="gazebo_ros_control" filename="libgazebo_ros_contol.so">
        <!-- <robotNamespace>/</robotNamespace> -->
  </plugin>

  <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
      <jointName> Front_left_wheel_joint, Front_right_wheel_joint , Lidar_joint, Metal_detector_plate_joint
      </jointName>


  </plugin>


</gazebo>

</robot>